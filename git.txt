learning git window command.
for commites freom local repo. 

If you have a project directory that is currently not under version control and you want to start controlling it with Git,
you first need to go to that project’s directory. If you’ve never done this, it looks a little different depending on which system 
you’re running

for Linux:
$ cd /home/user/my_project

for Mac:
$ cd /Users/user/my_project

for Windows:
$ cd /c/user/my_project

and type:

$ git init 


This creates a new subdirectory named .git that contains all of your necessary repository files?—?a Git repository skeleton. 
At this point, nothing in your project is tracked yet. (See Git Internals for more information about exactly what files are 
contained in the .git directory you just created.)

If you want to start version-controlling existing files (as opposed to an empty directory), you should probably begin tracking 
those files and do an initial commit. You can accomplish that with a few git add commands that specify the files you want to track, 
followed by a git commit:

$ git add *.c
$ git add LICENSE
$ git commit -m 'initial project version'


The git add command takes a path name for either a file or a directory; if it’s a directory, 
the command adds all the files in that directory recursively.

git add -A  // adds all the files